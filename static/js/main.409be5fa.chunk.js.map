{"version":3,"sources":["index.js"],"names":["Dato","carnet","schedule","late","this","_carnet","_schedule","_late","List","Object","keys","map","key","index","substring","datos","id","onClick","props","onDelete","renderHeader","renderBody","React","Component","Form","state","handleInputChange","bind","handleSubmit","event","preventDefault","student","onSave","name","placeholder","type","htmlFor","maxLength","value","onChange","target","checked","setState","action","onSubmit","renderInput","for","class","data-submit","App","err","dato","slice","find","current","push","filter","ele","className","saveStudent","deleteStudent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.409be5fa.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Dato {\n    constructor(carnet, schedule, late) {\n        this._carnet = carnet;\n        this._schedule = schedule;\n        this._late = late;\n    }\n\n    get carnet() { return this._carnet }\n    get schedule() { return this._schedule }\n    get late() { return this._late}\n\n    set carnet(carnet) { this._carnet = carnet }\n    set schedule(schedule) { this._schedule = schedule }\n    set late(late) { this._late = late }\n}\n\nclass List extends React.Component {\n\n    renderHeader() {\n        return Object.keys(new Dato()).map((key, index) => {\n            return (\n                <th key={index}>\n                    {key.substring(1)}\n                </th>\n            );\n        });\n    }\n\n    renderBody(datos) {\n        return datos.map(({id, carnet, schedule, late }) => {\n            return (\n                <tr key={carnet}>\n                    <td>{carnet}</td>\n                    <td>{schedule}</td>\n                    <td>{late}</td>\n                    <td>\n                        <button  onClick={() => {this.props.onDelete(id)}}>Delete</button>\n                    </td>\n                </tr>\n            );\n        });\n      \n    }\n\n    render() {\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            {this.renderHeader()}\n                        </tr>\n                    </thead>\n                    <tbody>\n                         {this.renderBody(this.props.datos)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nclass Form extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { carnet: '', schedule: '', late: ''};\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // Manejador del evento de submit, ejecuta la funcion saveStudent\n    // Pasada por props\n    handleSubmit(event) {\n        event.preventDefault();\n    // Se necesitan validaciones de entrada\n    let student = new Dato(this.state.carnet);\n    this.props.onSave(student);\n    }\n\n    renderInput(name, placeholder, type = \"text\") {\n        return (\n          /* Se un fragmento React, para establecer que este código se hijo directo en el resultado */\n          <fieldset>\n            <label htmlFor={name}>{name}</label>\n            <input\n              maxLength=\"8\"\n              type={type}\n              name={name}\n              id={name}\n              value={this.state[name]}\n              placeholder={placeholder}\n              onChange={this.handleInputChange}\n            />\n          </fieldset>\n        );\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const carnet = target.carnet;\n\n        this.setState({\n            [carnet]: value});\n    }\n\n    render() {\n        return (\n            <form id=\"contact\" action=\"\" onSubmit={this.handleSubmit}>\n                <h3>Student Form</h3>\n\n                    {this.renderInput(\"carnet\", \"00031111\")}\n                <label for=\"schedule\">Seleccione el horario:</label>\n                    <select name=\"schedule\" class=\"form-control\" id=\"schedule_field\">\n                        <option>Lunes de 9:00 a 11.00</option>\n                        <option>Martes de 13:30 a 15:30</option>\n                        <option>Miércoles de 9:00 a 11.00</option>\n                        <option>Jueves de 13:30 a 15:30</option>\n                        <option>Viernes de 9:00 a 11.00</option>\n                        <option>Viernes de 15:30 a 17:30</option>\n                    </select>\n                    <div class=\"custom-control custom-switch\">\n                        <input\n                        type=\"checkbox\"\n                        class=\"custom-control-input\"\n                        id=\"late_switch\"\n                        />\n                        <label class=\"custom-control-label\" for=\"late_switch\"\n                        >Llegó tarde?</label>\n                    </div>\n                    <fieldset>\n                    <button name=\"submit\" type=\"submit\" id=\"contact-submit\" data-submit=\"...Sending\">\n                        Enviar\n                    </button>\n                    </fieldset>\n                </form>\n        );\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            datos: [],\n            err: ''\n        }\n    }\n\n    saveStudent(dato) {\n        const datos = this.state.datos.slice();\n        if (!datos.find((current) => {\n            return current.carnet === dato.carnet;\n        })) {\n            datos.push(dato);\n            this.setState({ datos, err: '' });\n        } else {\n            this.setState({ err: \"El estudiante ya existe\" })\n        }\n\n    }\n\n    deleteStudent(carnet) {\n        const datos = this.state.datos.filter(function (ele) {\n            return ele.carnet !== carnet;\n        });\n        this.setState({ datos });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div>{this.state.err}</div>\n                    <Form onSave={(dato) => {\n                        this.saveStudent(dato)\n                    }} />\n                </div>\n                <List datos={this.state.datos} onDelete={(carnet) => {\n                    this.deleteStudent(carnet);\n                }} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}